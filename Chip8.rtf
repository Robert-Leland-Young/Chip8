{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\froman\fcharset0 Times New Roman;}{\f1\fswiss\fcharset0 Courier New;}{\f2\fswiss\fcharset0 Arial;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue255;\red128\green128\blue128;}
{\*\generator Msftedit 5.41.15.1515;}\viewkind4\uc1\pard\sb100\sa100\qc\f0\fs24 Cowgod's\line\b\f1\fs20 Chip-8\b0\f0\fs24\line Technical Reference v1.0\par
\pard\sb100\sa100\line\ul\b\i\fs28 0.0 - Table of Contents \line\ulnone\b0\i0\fs24\line\b{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul 0.0}}}\cf0\ulnone\f0\fs24  - Table of Contents\b0\line{\field{\*\fldinst{HYPERLINK "\\l "0.1""}}{\fldrslt{\cf1\ul 0.1}}}\cf0\ulnone\f0\fs24  - Using This Document\line\line\b{\field{\*\fldinst{HYPERLINK "\\l "1.0""}}{\fldrslt{\cf1\ul 1.0}}}\cf0\ulnone\f0\fs24  - About Chip-8\b0\line\line\b{\field{\*\fldinst{HYPERLINK "\\l "2.0""}}{\fldrslt{\cf1\ul 2.0}}}\cf0\ulnone\f0\fs24  - Chip-8 Specifications\b0\line{\field{\*\fldinst{HYPERLINK "\\l "2.1""}}{\fldrslt{\cf1\ul 2.1}}}\cf0\ulnone\f0\fs24  - Memory\line{\field{\*\fldinst{HYPERLINK "\\l "memmap""}}{\fldrslt{\cf1\ul Diagram}}}\cf0\ulnone\f0\fs24  - Memory Map\line{\field{\*\fldinst{HYPERLINK "\\l "2.2""}}{\fldrslt{\cf1\ul 2.2}}}\cf0\ulnone\f0\fs24  - Registers\line{\field{\*\fldinst{HYPERLINK "\\l "2.3""}}{\fldrslt{\cf1\ul 2.3}}}\cf0\ulnone\f0\fs24  - Keyboard\line{\field{\*\fldinst{HYPERLINK "\\l "keyboard""}}{\fldrslt{\cf1\ul Diagram}}}\cf0\ulnone\f0\fs24  - Keyboard Layout\line{\field{\*\fldinst{HYPERLINK "\\l "2.4""}}{\fldrslt{\cf1\ul 2.4}}}\cf0\ulnone\f0\fs24  - Display\line{\field{\*\fldinst{HYPERLINK "\\l "dispcoords""}}{\fldrslt{\cf1\ul Diagram}}}\cf0\ulnone\f0\fs24  - Display Coordinates\line{\field{\*\fldinst{HYPERLINK "\\l "font""}}{\fldrslt{\cf1\ul Listing}}}\cf0\ulnone\f0\fs24  - The Chip-8 Hexadecimal Font\line{\field{\*\fldinst{HYPERLINK "\\l "2.5""}}{\fldrslt{\cf1\ul 2.5}}}\cf0\ulnone\f0\fs24  - Timers & Sound\line\line\b{\field{\*\fldinst{HYPERLINK "\\l "3.0""}}{\fldrslt{\cf1\ul 3.0}}}\cf0\ulnone\f0\fs24  - Chip-8 Instructions\b0\line{\field{\*\fldinst{HYPERLINK "\\l "3.1""}}{\fldrslt{\cf1\ul 3.1}}}\cf0\ulnone\f0\fs24  - Standard Chip-8 Instructions\line{\field{\*\fldinst{HYPERLINK "\\l "00E0""}}{\fldrslt{\cf1\ul 00E0}}}\cf0\ulnone\f0\fs24  - CLS\line{\field{\*\fldinst{HYPERLINK "\\l "00EE""}}{\fldrslt{\cf1\ul 00EE}}}\cf0\ulnone\f0\fs24  - RET\line{\field{\*\fldinst{HYPERLINK "\\l "0nnn""}}{\fldrslt{\cf1\ul 0\ulnone\i nnn}}}\cf0\i0\f0\fs24  - SYS \i addr\i0\line{\field{\*\fldinst{HYPERLINK "\\l "1nnn""}}{\fldrslt{\cf1\ul 1\ulnone\i nnn}}}\cf0\i0\f0\fs24  - JP \i addr\i0\line{\field{\*\fldinst{HYPERLINK "\\l "2nnn""}}{\fldrslt{\cf1\ul 2\ulnone\i nnn}}}\cf0\i0\f0\fs24  - CALL \i addr\i0\line{\field{\*\fldinst{HYPERLINK "\\l "3xkk""}}{\fldrslt{\cf1\ul 3\ulnone\i xkk}}}\cf0\i0\f0\fs24  - SE V\i x\i0 , \i byte\i0\line{\field{\*\fldinst{HYPERLINK "\\l "4xkk""}}{\fldrslt{\cf1\ul 4\ulnone\i xkk}}}\cf0\i0\f0\fs24  - SNE V\i x\i0 , \i byte\i0\line{\field{\*\fldinst{HYPERLINK "\\l "5xy0""}}{\fldrslt{\cf1\ul 5\ulnone\i xy\ul\i0 0}}}\cf0\ulnone\f0\fs24  - SE V\i x\i0 , V\i y\i0\line{\field{\*\fldinst{HYPERLINK "\\l "6xkk""}}{\fldrslt{\cf1\ul 6\ulnone\i xkk}}}\cf0\i0\f0\fs24  - LD V\i x\i0 , \i byte\i0\line{\field{\*\fldinst{HYPERLINK "\\l "7xkk""}}{\fldrslt{\cf1\ul 7\ulnone\i xkk}}}\cf0\i0\f0\fs24  - ADD V\i x\i0 , \i byte\i0\line{\field{\*\fldinst{HYPERLINK "\\l "8xy0""}}{\fldrslt{\cf1\ul 8\ulnone\i xy\ul\i0 0}}}\cf0\ulnone\f0\fs24  - LD V\i x\i0 , V\i y\i0\line{\field{\*\fldinst{HYPERLINK "\\l "8xy1""}}{\fldrslt{\cf1\ul 8\ulnone\i xy\ul\i0 1}}}\cf0\ulnone\f0\fs24  - OR V\i x\i0 , V\i y\i0\line{\field{\*\fldinst{HYPERLINK "\\l "8xy2""}}{\fldrslt{\cf1\ul 8\ulnone\i xy\ul\i0 2}}}\cf0\ulnone\f0\fs24  - AND V\i x\i0 , V\i y\i0\line{\field{\*\fldinst{HYPERLINK "\\l "8xy3""}}{\fldrslt{\cf1\ul 8\ulnone\i xy\ul\i0 3}}}\cf0\ulnone\f0\fs24  - XOR V\i x\i0 , V\i y\i0\line{\field{\*\fldinst{HYPERLINK "\\l "8xy4""}}{\fldrslt{\cf1\ul 8\ulnone\i xy\ul\i0 4}}}\cf0\ulnone\f0\fs24  - ADD V\i x\i0 , V\i y\i0\line{\field{\*\fldinst{HYPERLINK "\\l "8xy5""}}{\fldrslt{\cf1\ul 8\ulnone\i xy\ul\i0 5}}}\cf0\ulnone\f0\fs24  - SUB V\i x\i0 , V\i y\i0\line{\field{\*\fldinst{HYPERLINK "\\l "8xy6""}}{\fldrslt{\cf1\ul 8\ulnone\i xy\ul\i0 6}}}\cf0\ulnone\f0\fs24  - SHR V\i x\i0  \{, V\i y\i0\}\line{\field{\*\fldinst{HYPERLINK "\\l "8xy7""}}{\fldrslt{\cf1\ul 8\ulnone\i xy\ul\i0 7}}}\cf0\ulnone\f0\fs24  - SUBN V\i x\i0 , V\i y\i0\line{\field{\*\fldinst{HYPERLINK "\\l "8xyE""}}{\fldrslt{\cf1\ul 8\ulnone\i xy\ul\i0 E}}}\cf0\ulnone\f0\fs24  - SHL V\i x\i0  \{, V\i y\i0\}\line{\field{\*\fldinst{HYPERLINK "\\l "9xy0""}}{\fldrslt{\cf1\ul 9\ulnone\i xy\ul\i0 0}}}\cf0\ulnone\f0\fs24  - SNE V\i x\i0 , V\i y\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Annn""}}{\fldrslt{\cf1\ul A\ulnone\i nnn}}}\cf0\i0\f0\fs24  - LD I, \i addr\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Bnnn""}}{\fldrslt{\cf1\ul B\ulnone\i nnn}}}\cf0\i0\f0\fs24  - JP V0, \i addr\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Cxkk""}}{\fldrslt{\cf1\ul C\ulnone\i xkk}}}\cf0\i0\f0\fs24  - RND V\i x\i0 , \i byte\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Dxyn""}}{\fldrslt{\cf1\ul D\ulnone\i xyn}}}\cf0\i0\f0\fs24  - DRW V\i x\i0 , V\i y\i0 , \i nibble\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Ex9E""}}{\fldrslt{\cf1\ul E\ulnone\i x\ul\i0 9E}}}\cf0\ulnone\f0\fs24  - SKP V\i x\i0\line{\field{\*\fldinst{HYPERLINK "\\l "ExA1""}}{\fldrslt{\cf1\ul E\ulnone\i x\ul\i0 A1}}}\cf0\ulnone\f0\fs24  - SKNP V\i x\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Fx07""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 07}}}\cf0\ulnone\f0\fs24  - LD V\i x\i0 , DT\line{\field{\*\fldinst{HYPERLINK "\\l "Fx0A""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 0A}}}\cf0\ulnone\f0\fs24  - LD V\i x\i0 , K\line{\field{\*\fldinst{HYPERLINK "\\l "Fx15""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 15}}}\cf0\ulnone\f0\fs24  - LD DT, V\i x\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Fx18""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 18}}}\cf0\ulnone\f0\fs24  - LD ST, V\i x\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Fx1E""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 1E}}}\cf0\ulnone\f0\fs24  - ADD I, V\i x\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Fx29""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 29}}}\cf0\ulnone\f0\fs24  - LD F, V\i x\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Fx33""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 33}}}\cf0\ulnone\f0\fs24  - LD B, V\i x\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Fx55""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 55}}}\cf0\ulnone\f0\fs24  - LD [I], V\i x\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Fx65""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 65}}}\cf0\ulnone\f0\fs24  - LD V\i x\i0 , [I]\line{\field{\*\fldinst{HYPERLINK "\\l "3.2""}}{\fldrslt{\cf1\ul 3.2}}}\cf0\ulnone\f0\fs24  - Super Chip-48 Instructions\line{\field{\*\fldinst{HYPERLINK "\\l "00Cn""}}{\fldrslt{\cf1\ul 00C\ulnone\i n}}}\cf0\i0\f0\fs24  - SCD \i nibble\i0\line{\field{\*\fldinst{HYPERLINK "\\l "00FB""}}{\fldrslt{\cf1\ul 00FB}}}\cf0\ulnone\f0\fs24  - SCR\line{\field{\*\fldinst{HYPERLINK "\\l "00FC""}}{\fldrslt{\cf1\ul 00FC}}}\cf0\ulnone\f0\fs24  - SCL\line{\field{\*\fldinst{HYPERLINK "\\l "00FD""}}{\fldrslt{\cf1\ul 00FD}}}\cf0\ulnone\f0\fs24  - EXIT\line{\field{\*\fldinst{HYPERLINK "\\l "00FE""}}{\fldrslt{\cf1\ul 00FE}}}\cf0\ulnone\f0\fs24  - LOW\line{\field{\*\fldinst{HYPERLINK "\\l "00FF""}}{\fldrslt{\cf1\ul 00FF}}}\cf0\ulnone\f0\fs24  - HIGH\line{\field{\*\fldinst{HYPERLINK "\\l "Dxy0""}}{\fldrslt{\cf1\ul D\ulnone\i xy\ul\i0 0}}}\cf0\ulnone\f0\fs24  - DRW V\i x\i0 , V\i y\i0 , 0\line{\field{\*\fldinst{HYPERLINK "\\l "Fx30""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 30}}}\cf0\ulnone\f0\fs24  - LD HF, V\i x\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Fx75""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 75}}}\cf0\ulnone\f0\fs24  - LD R, V\i x\i0\line{\field{\*\fldinst{HYPERLINK "\\l "Fx85""}}{\fldrslt{\cf1\ul F\ulnone\i x\ul\i0 85}}}\cf0\ulnone\f0\fs24  - LD V\i x\i0 , R\line\line\b{\field{\*\fldinst{HYPERLINK "\\l "4.0""}}{\fldrslt{\cf1\ul 4.0}}}\cf0\ulnone\f0\fs24  - Interpreters\b0\line\line\b{\field{\*\fldinst{HYPERLINK "\\l "5.0""}}{\fldrslt{\cf1\ul 5.0}}}\cf0\ulnone\f0\fs24  - Credits\b0\line\line\line\ul\b\i 0.1 - Using This Document \ulnone\b0\i0{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs24\line\line While creating this document, I took every effort to try to make it easy to read, as well as easy to find what you're looking for.\line\line In most cases, where a hexadecimal value is given, it is followed by the equivalent decimal value in parenthesis. For example, "0x200 (512)."\line\line In most cases, when a word or letter is italicized, it is referring to a variable value, for example, if I write "V\i x\i0 ," the \i x\i0  reffers to a 4-bit value.\line\line The most important thing to remember as you read this document is that every {\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs24  link will take you back to the Table Of Contents. Also, links that you have not yet visited will appear in \cf1 blue\cf0 , while links you have used will be \cf2 gray\cf0 .\line\line\line\ul\b\i\fs28 1.0 - About Chip-8 \ulnone\b0\i0\fs24{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs24\line\line Whenever I mention to someone that I'm writing a Chip-8 interpreter, the response is always the same: "What's a Chip-8?"\line\line Chip-8 is a simple, interpreted, programming language which was first used on some do-it-yourself computer systems in the late 1970s and early 1980s. The COSMAC VIP, DREAM 6800, and ETI 660 computers are a few examples. These computers typically were designed to use a television as a display, had between 1 and 4K of RAM, and used a 16-key hexadecimal keypad for input. The interpreter took up only 512 bytes of memory, and programs, which were entered into the computer in hexadecimal, were even smaller.\line\line In the early 1990s, the Chip-8 language was revived by a man named Andreas Gustafsson. He created a Chip-8 interpreter for the HP48 graphing calculator, called Chip-48. The HP48 was lacking a way to easily make fast games at the time, and Chip-8 was the answer. Chip-48 later begat Super Chip-48, a modification of Chip-48 which allowed higher resolution graphics, as well as other graphical enhancements.\line\line Chip-48 inspired a whole new crop of Chip-8 interpreters for various platforms, including MS-DOS, Windows 3.1, Amiga, HP48, MSX, Adam, and ColecoVision. I became involved with Chip-8 after stumbling upon Paul Robson's interpreter on the World Wide Web. Shortly after that, I began writing my own Chip-8 interpreter.\line\line This document is a compilation of all the different sources of information I used while programming my interpreter.\line\line\line\ul\b\i\fs28 2.0 - Chip-8 Specifications \ulnone\b0\i0\fs24{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs24\line\line This section describes the Chip-8 memory, registers, display, keyboard, and timers.\line\line\line\ul\b\i 2.1 - Memory \ulnone\b0\i0{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs24\line\line The Chip-8 language is capable of accessing up to 4KB (4,096 bytes) of RAM, from location 0x000 (0) to 0xFFF (4095). The first 512 bytes, from 0x000 to 0x1FF, are where the original interpreter was located, and should not be used by programs.\line\line Most Chip-8 programs start at location 0x200 (512), but some begin at 0x600 (1536). Programs beginning at 0x600 are intended for the ETI 660 computer.\line\line\b Memory Map:\b0\line +---------------+= 0xFFF (4095) End of Chip-8 RAM\line | |\line | |\line | |\line | |\line | |\line | 0x200 to 0xFFF|\line | Chip-8 |\line | Program / Data|\line | Space |\line | |\line | |\line | |\line +- - - - - - - -+= 0x600 (1536) Start of ETI 660 Chip-8 programs\line | |\line | |\line | |\line +---------------+= 0x200 (512) Start of most Chip-8 programs\line | 0x000 to 0x1FF|\line | Reserved for |\line | interpreter |\line +---------------+= 0x000 (0) Start of Chip-8 RAM\line\line\line\ul\b\i 2.2 - Registers \ulnone\b0\i0{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs24\line\line Chip-8 has 16 general purpose 8-bit registers, usually referred to as V\i x\i0 , where \i x\i0  is a hexadecimal digit (0 through F). There is also a 16-bit register called I. This register is generally used to store memory addresses, so only the lowest (rightmost) 12 bits are usually used.\line\line The VF register should not be used by any program, as it is used as a flag by some instructions. See section 3.0, {\field{\*\fldinst{HYPERLINK "\\l "3.0""}}{\fldrslt{\cf1\ul Instructions}}}\cf0\ulnone\f0\fs24  for details.\line\line Chip-8 also has two special purpose 8-bit registers, for the delay and sound timers. When these registers are non-zero, they are automatically decremented at a rate of 60Hz. See the section 2.5, {\field{\*\fldinst{HYPERLINK "\\l "2.5""}}{\fldrslt{\cf1\ul Timers & Sound}}}\cf0\ulnone\f0\fs24 , for more information on these.\line\line There are also some "pseudo-registers" which are not accessable from Chip-8 programs. The program counter (PC) should be 16-bit, and is used to store the currently executing address. The stack pointer (SP) can be 8-bit, it is used to point to the topmost level of the stack.\line\line The stack is an array of 16 16-bit values, used to store the address that the interpreter shoud return to when finished with a subroutine. Chip-8 allows for up to 16 levels of nested subroutines.\line\line\line\ul\b\i 2.3 - Keyboard \ulnone\b0\i0{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs24\line\line The computers which originally used the Chip-8 Language had a 16-key hexadecimal keypad with the following layout:\line\par
\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx160\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx320\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx480\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx640\pard\intbl\sb100\sa100\f1\fs20 1\f0\fs24\cell\f1\fs20 2\f0\fs24\cell\f1\fs20 3\f0\fs24\cell\f1\fs20 C\f0\fs24\cell\row\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx160\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx320\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx480\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx640\pard\intbl\sb100\sa100\f1\fs20 4\f0\fs24\cell\f1\fs20 5\f0\fs24\cell\f1\fs20 6\f0\fs24\cell\f1\fs20 D\f0\fs24\cell\row\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx160\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx320\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx480\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx640\pard\intbl\sb100\sa100\f1\fs20 7\f0\fs24\cell\f1\fs20 8\f0\fs24\cell\f1\fs20 9\f0\fs24\cell\f1\fs20 E\f0\fs24\cell\row\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx160\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx320\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx480\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx640\pard\intbl\sb100\sa100\f1\fs20 A\f0\fs24\cell\f1\fs20 0\f0\fs24\cell\f1\fs20 B\f0\fs24\cell\f1\fs20 F\f0\fs24\cell\row\pard\sb100\sa100\line This layout must be mapped into various other configurations to fit the keyboards of today's platforms.\line\line\line\ul\b\i 2.4 - Display \ulnone\b0\i0{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs24\line\line The original implementation of the Chip-8 language used a 64x32-pixel monochrome display with this format:\line\par
\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx906\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1910\pard\intbl\sb100\sa100 (0,0)\cell\pard\intbl\sb100\sa100\qr (63,0)\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalb\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx906\clvertalb\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1910\pard\intbl\sb100\sa100 (0,31)\cell\pard\intbl\sb100\sa100\qr (63,31)\cell\row\pard\sb100\sa100\line Some other interpreters, most notably the one on the ETI 660, also had 64x48 and 64x64 modes. To my knowledge, no current interpreter supports these modes. More recently, Super Chip-48, an interpreter for the HP48 calculator, added a 128x64-pixel mode. This mode is now supported by most of the interpreters on other platforms.\line\line Chip-8 draws graphics on screen through the use of sprites. A sprite is a group of bytes which are a binary representation of the desired picture. Chip-8 sprites may be up to 15 bytes, for a possible sprite size of 8x15.\line\line Programs may also refer to a group of sprites representing the hexadecimal digits 0 through F. These sprites are 5 bytes long, or 8x5 pixels. The data should be stored in the interpreter area of Chip-8 memory (0x000 to 0x1FF). Below is a listing of each character's bytes, in binary and hexadecimal:\line\line\par
\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvmgf\clvertalc\cellx5110\pard\intbl\sb100\sa100 "0"\cell Binary\cell Hex\cell "1"\cell Binary\cell\cell Hex\cell\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvmrg\clvertalc\cellx5110\pard\intbl\sb100\sa100\f1\fs20 ****\line * *\line * *\line * *\line ****\line\f0\fs24\cell\f1\fs20 11110000\line 10010000\line 10010000\line 10010000\line 11110000\line\f0\fs24\cell\f1\fs20 0xF0\line 0x90\line 0x90\line 0x90\line 0xF0\line\f0\fs24\cell\f1\fs20 * \line ** \line * \line * \line ***\line\f0\fs24\cell\f1\fs20 00100000\line 01100000\line 00100000\line 00100000\line 01110000\line\f0\fs24\cell\cell\f1\fs20 0x20\line 0x60\line 0x20\line 0x20\line 0x70\line\f0\fs24\cell\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100 "2"\cell Binary\cell Hex\cell "3"\cell\cell Binary\cell\cell Hex\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100\f1\fs20 ****\line *\line ****\line * \line ****\line\f0\fs24\cell\f1\fs20 11110000\line 00010000\line 11110000\line 10000000\line 11110000\line\f0\fs24\cell\f1\fs20 0xF0\line 0x10\line 0xF0\line 0x80\line 0xF0\line\f0\fs24\cell\f1\fs20 ****\line *\line ****\line *\line ****\line\f0\fs24\cell\cell\f1\fs20 11110000\line 00010000\line 11110000\line 00010000\line 11110000\line\f0\fs24\cell\cell\f1\fs20 0xF0\line 0x10\line 0xF0\line 0x10\line 0xF0\line\f0\fs24\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100 "4"\cell Binary\cell Hex\cell "5"\cell\cell Binary\cell\cell Hex\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100\f1\fs20 * *\line * *\line ****\line *\line *\line\f0\fs24\cell\f1\fs20 10010000\line 10010000\line 11110000\line 00010000\line 00010000\line\f0\fs24\cell\f1\fs20 0x90\line 0x90\line 0xF0\line 0x10\line 0x10\line\f0\fs24\cell\f1\fs20 ****\line * \line ****\line *\line ****\line\f0\fs24\cell\cell\f1\fs20 11110000\line 10000000\line 11110000\line 00010000\line 11110000\line\f0\fs24\cell\cell\f1\fs20 0xF0\line 0x80\line 0xF0\line 0x10\line 0xF0\line\f0\fs24\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100 "6"\cell Binary\cell Hex\cell "7"\cell\cell Binary\cell\cell Hex\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100\f1\fs20 ****\line * \line ****\line * *\line ****\line\f0\fs24\cell\f1\fs20 11110000\line 10000000\line 11110000\line 10010000\line 11110000\line\f0\fs24\cell\f1\fs20 0xF0\line 0x80\line 0xF0\line 0x90\line 0xF0\line\f0\fs24\cell\f1\fs20 ****\line *\line * \line * \line * \line\f0\fs24\cell\cell\f1\fs20 11110000\line 00010000\line 00100000\line 01000000\line 01000000\line\f0\fs24\cell\cell\f1\fs20 0xF0\line 0x10\line 0x20\line 0x40\line 0x40\line\f0\fs24\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100 "8"\cell Binary\cell Hex\cell "9"\cell\cell Binary\cell\cell Hex\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100\f1\fs20 ****\line * *\line ****\line * *\line ****\line\f0\fs24\cell\f1\fs20 11110000\line 10010000\line 11110000\line 10010000\line 11110000\line\f0\fs24\cell\f1\fs20 0xF0\line 0x90\line 0xF0\line 0x90\line 0xF0\line\f0\fs24\cell\f1\fs20 ****\line * *\line ****\line *\line ****\line\f0\fs24\cell\cell\f1\fs20 11110000\line 10010000\line 11110000\line 00010000\line 11110000\line\f0\fs24\cell\cell\f1\fs20 0xF0\line 0x90\line 0xF0\line 0x10\line 0xF0\line\f0\fs24\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100 "A"\cell Binary\cell Hex\cell "B"\cell\cell Binary\cell\cell Hex\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100\f1\fs20 ****\line * *\line ****\line * *\line * *\line\f0\fs24\cell\f1\fs20 11110000\line 10010000\line 11110000\line 10010000\line 10010000\line\f0\fs24\cell\f1\fs20 0xF0\line 0x90\line 0xF0\line 0x90\line 0x90\line\f0\fs24\cell\f1\fs20 *** \line * *\line *** \line * *\line *** \line\f0\fs24\cell\cell\f1\fs20 11100000\line 10010000\line 11100000\line 10010000\line 11100000\line\f0\fs24\cell\cell\f1\fs20 0xE0\line 0x90\line 0xE0\line 0x90\line 0xE0\line\f0\fs24\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100 "C"\cell Binary\cell Hex\cell "D"\cell\cell Binary\cell\cell Hex\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3126\clvertalc\cellx3190\clvertalc\cellx4406\clvertalc\cellx4470\clvertalc\cellx5046\clvertalc\cellx5110\pard\intbl\sb100\sa100\f1\fs20 ****\line * \line * \line * \line ****\line\f0\fs24\cell\f1\fs20 11110000\line 10000000\line 10000000\line 10000000\line 11110000\line\f0\fs24\cell\f1\fs20 0xF0\line 0x80\line 0x80\line 0x80\line 0xF0\line\f0\fs24\cell\f1\fs20 *** \line * *\line * *\line * *\line *** \line\f0\fs24\cell\cell\f1\fs20 11100000\line 10010000\line 10010000\line 10010000\line 11100000\line\f0\fs24\cell\cell\f1\fs20 0xE0\line 0x90\line 0x90\line 0x90\line 0xE0\line\f0\fs24\cell\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3190\clvertalc\cellx4470\clvertalc\cellx5110\pard\intbl\sb100\sa100 "E"\cell Binary\cell Hex\cell "F"\cell Binary\cell Hex\cell\row\trowd\trgaph10\trleft-10\trqc\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\cellx630\clvertalc\cellx1910\clvertalc\cellx2550\clvertalc\cellx3190\clvertalc\cellx4470\clvertalc\cellx5110\pard\intbl\sb100\sa100\f1\fs20 ****\line * \line ****\line * \line ****\line\f0\fs24\cell\f1\fs20 11110000\line 10000000\line 11110000\line 10000000\line 11110000\line\f0\fs24\cell\f1\fs20 0xF0\line 0x80\line 0xF0\line 0x80\line 0xF0\line\f0\fs24\cell\f1\fs20 ****\line * \line ****\line * \line * \line\f0\fs24\cell\f1\fs20 11110000\line 10000000\line 11110000\line 10000000\line 10000000\line\f0\fs24\cell\f1\fs20 0xF0\line 0x80\line 0xF0\line 0x80\line 0x80\line\f0\fs24\cell\row\pard\sb100\sa100\line\line\ul\b\i 2.5 - Timers & Sound \ulnone\b0\i0{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs24\line\line Chip-8 provides 2 timers, a delay timer and a sound timer.\line\line The delay timer is active whenever the delay timer register (DT) is non-zero. This timer does nothing more than subtract 1 from the value of DT at a rate of 60Hz. When DT reaches 0, it deactivates.\line\line The sound timer is active whenever the sound timer register (ST) is non-zero. This timer also decrements at a rate of 60Hz, however, as long as ST's value is greater than zero, the Chip-8 buzzer will sound. When ST reaches zero, the sound timer deactivates.\line\line The sound produced by the Chip-8 interpreter has only one tone. The frequency of this tone is decided by the author of the interpreter.\line\line\line\ul\b\i\fs28 3.0 - Chip-8 Instructions \ulnone\b0\i0\fs24{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs24\line\line The original implementation of the Chip-8 language includes 36 different instructions, including math, graphics, and flow control functions.\line\line Super Chip-48 added an additional 10 instructions, for a total of 46.\line\line All instructions are 2 bytes long and are stored most-significant-byte first. In memory, the first byte of each instruction should be located at an even addresses. If a program includes sprite data, it should be padded so any instructions following it will be properly situated in RAM.\line\line This document does not yet contain descriptions of the Super Chip-48 instructions. They are, however, listed below.\line\line In these listings, the following variables are used:\line\line\i nnn\i0  or \i addr\i0  - A 12-bit value, the lowest 12 bits of the instruction\line\i n\i0  or \i nibble\i0  - A 4-bit value, the lowest 4 bits of the instruction\line\i x\i0  - A 4-bit value, the lower 4 bits of the high byte of the instruction\line\i y\i0  - A 4-bit value, the upper 4 bits of the low byte of the instruction\line\i kk\i0  or \i byte\i0  - An 8-bit value, the lowest 8 bits of the instruction\line\fs20\line\line\ul\b\i\fs24 3.1 - Standard Chip-8 Instructions \ulnone\b0\i0\fs20{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs20\line\line\b\fs24 0\i nnn\i0  - SYS \i addr\b0\i0\line Jump to a machine code routine at \i nnn\i0 .\line\line This instruction is only used on the old computers on which Chip-8 was originally implemented. It is ignored by modern interpreters.\line\line\line\b 00E0 - CLS\b0\line Clear the display.\line\line\line\b 00EE - RET\b0\line Return from a subroutine.\line\line The interpreter sets the program counter to the address at the top of the stack, then subtracts 1 from the stack pointer.\line\line\line\b 1\i nnn\i0  - JP \i addr\b0\i0\line Jump to location \i nnn\i0 .\line\line The interpreter sets the program counter to \i nnn\i0 .\line\line\line\b 2\i nnn\i0  - CALL \i addr\b0\i0\line Call subroutine at \i nnn\i0 .\line\line The interpreter increments the stack pointer, then puts the current PC on the top of the stack. The PC is then set to \i nnn\i0 .\line\line\line\b 3\i xkk\i0  - SE V\i x\i0 , \i byte\b0\i0\line Skip next instruction if V\i x\i0  = \i kk\i0 .\line\line The interpreter compares register V\i x\i0  to \i kk\i0 , and if they are equal, increments the program counter by 2.\line\line\line\b 4\i xkk\i0  - SNE V\i x\i0 , \i byte\b0\i0\line Skip next instruction if V\i x\i0  != \i kk\i0 .\line\line The interpreter compares register V\i x\i0  to \i kk\i0 , and if they are not equal, increments the program counter by 2.\line\line\line\b 5\i xy\i0 0 - SE V\i x\i0 , V\i y\b0\i0\line Skip next instruction if V\i x\i0  = V\i y\i0 .\line\line The interpreter compares register V\i x\i0  to register V\i y\i0 , and if they are equal, increments the program counter by 2.\line\line\line\b 6\i xkk\i0  - LD V\i x\i0 , \i byte\b0\i0\line Set V\i x\i0  = \i kk\i0 .\line\line The interpreter puts the value \i kk\i0  into register V\i x\i0 .\line\line\line\b 7\i xkk\i0  - ADD V\i x\i0 , \i byte\b0\i0\line Set V\i x\i0  = V\i x\i0  + \i kk\i0 .\line\line Adds the value \i kk\i0  to the value of register V\i x\i0 , then stores the result in V\i x\i0 . \line\line\b 8\i xy\i0 0 - LD V\i x\i0 , V\i y\b0\i0\line Set V\i x\i0  = V\i y\i0 .\line\line Stores the value of register V\i y\i0  in register V\i x\i0 .\line\line\line\b 8\i xy\i0 1 - OR V\i x\i0 , V\i y\b0\i0\line Set Vx = V\i x\i0  OR V\i y\i0 .\line\line Performs a bitwise OR on the values of V\i x\i0  and V\i y\i0 , then stores the result in V\i x\i0 . A bitwise OR compares the corrseponding bits from two values, and if either bit is 1, then the same bit in the result is also 1. Otherwise, it is 0. \line\line\line\b 8\i xy\i0 2 - AND V\i x\i0 , V\i y\b0\i0\line Set V\i x\i0  = V\i x\i0  AND V\i y\i0 .\line\line Performs a bitwise AND on the values of V\i x\i0  and V\i y\i0 , then stores the result in V\i x\i0 . A bitwise AND compares the corrseponding bits from two values, and if both bits are 1, then the same bit in the result is also 1. Otherwise, it is 0. \line\line\line\b 8\i xy\i0 3 - XOR V\i x\i0 , V\i y\b0\i0\line Set V\i x\i0  = V\i x\i0  XOR V\i y\i0 .\line\line Performs a bitwise exclusive OR on the values of V\i x\i0  and V\i y\i0 , then stores the result in V\i x\i0 . An exclusive OR compares the corrseponding bits from two values, and if the bits are not both the same, then the corresponding bit in the result is set to 1. Otherwise, it is 0. \line\line\line\b 8\i xy\i0 4 - ADD V\i x\i0 , V\i y\b0\i0\line Set V\i x\i0  = V\i x\i0  + Vy, set VF = carry.\line\line The values of V\i x\i0  and V\i y\i0  are added together. If the result is greater than 8 bits (i.e., > 255,) VF is set to 1, otherwise 0. Only the lowest 8 bits of the result are kept, and stored in V\i x\i0 .\line\line\line\b 8\i xy\i0 5 - SUB V\i x\i0 , V\i y\b0\i0\line Set V\i x\i0  = V\i x\i0  - V\i y\i0 , set VF = NOT borrow.\line\line If V\i x\i0  > V\i y\i0 , then VF is set to 1, otherwise 0. Then V\i y\i0  is subtracted from V\i x\i0 , and the results stored in V\i x\i0 .\line\line\line\b 8\i xy\i0 6 - SHR V\i x\i0  \{, V\i y\i0\}\b0\line Set V\i x\i0  = V\i x\i0  SHR 1.\line\line If the least-significant bit of V\i x\i0  is 1, then VF is set to 1, otherwise 0. Then V\i x\i0  is divided by 2.\line\line\line\b 8\i xy\i0 7 - SUBN V\i x\i0 , V\i y\b0\i0\line Set V\i x\i0  = V\i y\i0  - V\i x\i0 , set VF = NOT borrow.\line\line If V\i y\i0  > V\i x\i0 , then VF is set to 1, otherwise 0. Then V\i x\i0  is subtracted from V\i y\i0 , and the results stored in V\i x\i0 .\line\line\line\b 8\i xy\i0 E - SHL V\i x\i0  \{, V\i y\i0\}\b0\line Set V\i x\i0  = V\i x\i0  SHL 1.\line\line If the most-significant bit of Vx is 1, then VF is set to 1, otherwise to 0. Then V\i x\i0  is multiplied by 2.\line\line\line\b 9\i xy\i0 0 - SNE V\i x\i0 , V\i y\b0\i0\line Skip next instruction if V\i x\i0  != V\i y\i0 .\line\line The values of V\i x\i0  and V\i y\i0  are compared, and if they are not equal, the program counter is increased by 2.\line\line\line\b A\i nnn\i0  - LD I, \i addr\b0\i0\line Set I = \i nnn\i0 .\line\line The value of register I is set to \i nnn\i0 .\line\line\line\b B\i nnn\i0  - JP V0, \i addr\b0\i0\line Jump to location \i nnn\i0  + V0.\line\line The program counter is set to \i nnn\i0  plus the value of V0.\line\line\line\b C\i xkk\i0  - RND V\i x\i0 , \i byte\b0\i0\line Set V\i x\i0  = random \i byte\i0  AND \i kk\i0 .\line\line The interpreter generates a random number from 0 to 255, which is then ANDed with the value kk. The results are stored in V\i x\i0 . See instruction {\field{\*\fldinst{HYPERLINK "\\l "8xy2""}}{\fldrslt{\cf1\ul 8\ulnone\i xy\ul\i0 2}}}\cf0\ulnone\f0\fs24  for more information on AND.\line\line\line\b D\i xyn\i0  - DRW V\i x\i0 , V\i y\i0 , \i nibble\b0\i0\line Display \i n\i0 -byte sprite starting at memory location I at (V\i x\i0 , V\i y\i0 ), set VF = collision.\line\line The interpreter reads \i n\i0  bytes from memory, starting at the address stored in I. These bytes are then displayed as sprites on screen at coordinates (V\i x\i0 , V\i y\i0 ). Sprites are XORed onto the existing screen. If this causes any pixels to be erased, VF is set to 1, otherwise it is set to 0. If the sprite is positioned so part of it is outside the coordinates of the display, it wraps around to the opposite side of the screen. See instruction {\field{\*\fldinst{HYPERLINK "\\l "8xy3""}}{\fldrslt{\cf1\ul 8\ulnone\i xy\ul\i0 3}}}\cf0\ulnone\f0\fs24  for more information on XOR, and section 2.4, {\field{\*\fldinst{HYPERLINK "2.4"}}{\fldrslt{\cf1\ul Display}}}\cf0\ulnone\f0\fs24 , for more information on the Chip-8 screen and sprites.\line\line\line\b E\i x\i0 9E - SKP V\i x\b0\i0\line Skip next instruction if key with the value of V\i x\i0  is pressed.\line\line Checks the keyboard, and if the key corresponding to the value of V\i x\i0  is currently in the down position, PC is increased by 2.\line\line\line\b E\i x\i0 A1 - SKNP V\i x\b0\i0\line Skip next instruction if key with the value of V\i x\i0  is not pressed.\line\line Checks the keyboard, and if the key corresponding to the value of V\i x\i0  is currently in the up position, PC is increased by 2.\line\line\line\b F\i x\i0 07 - LD V\i x\i0 , DT\b0\line Set V\i x\i0  = delay timer value.\line\line The value of DT is placed into V\i x\i0 .\line\line\line\b F\i x\i0 0A - LD V\i x\i0 , K\b0\line Wait for a key press, store the value of the key in V\i x\i0 .\line\line All execution stops until a key is pressed, then the value of that key is stored in V\i x\i0 .\line\line\line\b F\i x\i0 15 - LD DT, V\i x\b0\i0\line Set delay timer = V\i x\i0 .\line\line DT is set equal to the value of V\i x\i0 .\line\line\line\b F\i x\i0 18 - LD ST, V\i x\b0\i0\line Set sound timer = V\i x\i0 .\line\line ST is set equal to the value of V\i x\i0 .\line\line\line\b F\i x\i0 1E - ADD I, V\i x\b0\i0\line Set I = I + V\i x\i0 .\line\line The values of I and V\i x\i0  are added, and the results are stored in I.\line\line\line\b F\i x\i0 29 - LD F, V\i x\b0\i0\line Set I = location of sprite for digit V\i x\i0 .\line\line The value of I is set to the location for the hexadecimal sprite corresponding to the value of V\i x\i0 . See section 2.4, {\field{\*\fldinst{HYPERLINK "\\l "2.4""}}{\fldrslt{\cf1\ul Display}}}\cf0\ulnone\f0\fs24 , for more information on the Chip-8 hexadecimal font.\line\line\line\b F\i x\i0 33 - LD B, V\i x\b0\i0\line Store BCD representation of V\i x\i0  in memory locations I, I+1, and I+2.\line\line The interpreter takes the decimal value of V\i x\i0 , and places the hundreds digit in memory at location in I, the tens digit at location I+1, and the ones digit at location I+2.\line\line\line\b F\i x\i0 55 - LD [I], V\i x\b0\i0\line Store registers V0 through V\i x\i0  in memory starting at location I.\line\line The interpreter copies the values of registers V0 through V\i x\i0  into memory, starting at the address in I.\line\line\line\b F\i x\i0 65 - LD V\i x\i0 , [I]\b0\line Read registers V0 through V\i x\i0  from memory starting at location I.\line\line The interpreter reads values from memory starting at location I into registers V0 through V\i x\i0 .\line\line\line\ul\b\i 3.2 - Super Chip-48 Instructions \ulnone\b0\i0\fs20{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs20\line\line\b\fs24 00C\i n\i0  - SCD \i nibble\b0\i0\line\b 00FB - SCR\b0\line\b 00FC - SCL\b0\line\b 00FD - EXIT\b0\line\b 00FE - LOW\b0\line\b 00FF - HIGH\b0\line\b D\i xy\i0 0 - DRW V\i x\i0 , Vy, 0\b0\line\b F\i x\i0 30 - LD HF, V\i x\b0\i0\line\b F\i x\i0 75 - LD R, V\i x\b0\i0\line\b F\i x\i0 85 - LD V\i x\i0 , R\b0\line\line\line\line\ul\b\i\fs28 4.0 - Interpreters \ulnone\b0\i0\fs20{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs20\line\line\fs24 Below is a list of every Chip-8 interpreter I could find on the World Wide Web:\line\par
\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1549\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2308\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6524\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx9357\pard\intbl\sb100\sa100\b Title\b0\cell\b Version\b0\cell\b Author\b0\cell\b Platform(s)\b0\cell\row\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1549\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2308\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6524\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx9357\pard\intbl\sb100\sa100 Chip-48\cell 2.20\cell Anrdreas Gustafsson\cell HP48\cell\row\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1549\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2308\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6524\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx9357\pard\intbl\sb100\sa100 Chip8\cell 1.1\cell Paul Robson\cell DOS\cell\row\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1549\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2308\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6524\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx9357\pard\intbl\sb100\sa100 Chip-8 Emulator\cell 2.0.0\cell David Winter\cell DOS\cell\row\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1549\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2308\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6524\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx9357\pard\intbl\sb100\sa100 CowChip\cell 0.1\cell Thomas P. Greene\cell Windows 3.1\cell\row\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1549\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2308\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6524\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx9357\pard\intbl\sb100\sa100 DREAM MON\cell 1.1\cell Paul Hayter\cell Amiga\cell\row\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1549\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2308\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6524\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx9357\pard\intbl\sb100\sa100 Super Chip-48\cell 1.1\cell Based on Chip-48, modified by Erik Bryntse\cell HP48\cell\row\trowd\trgaph45\trqc\trpaddl45\trpaddr45\trpaddfl3\trpaddfr3
\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx1549\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx2308\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx6524\clvertalc\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx9357\pard\intbl\sb100\sa100 Vision-8\cell 1.0\cell Marcel de Kogel\cell DOS, Adam, MSX, ColecoVision\cell\row\pard\sb100\sa100\fs20\line\line\ul\b\i\fs28 5.0 - Credits \ulnone\b0\i0\fs20{\field{\*\fldinst{HYPERLINK "\\l "0.0""}}{\fldrslt{\cf1\ul [TOC]}}}\cf0\ulnone\f0\fs20\line\line\fs24 This document was compiled by {\field{\*\fldinst{HYPERLINK "mailto:cowgod@rockpile.com"}}{\fldrslt{\cf1\ul Thomas P. Greene}}}\cf0\ulnone\f0\fs24 .\line\line\b Sources include:\b0\par
\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent360{\pntxtb\'B7}}\fi-360\li720\sb100\sa100 My own hacking. \par
{\pntext\f3\'B7\tab}E-mail between David Winter and myself. \par
{\pntext\f3\'B7\tab}David Winter's \ul Chip-8 Emulator\ulnone  documentation. \par
{\pntext\f3\'B7\tab}Christian Egeberg's \ul Chipper\ulnone  documentation. \par
{\pntext\f3\'B7\tab}Marcel de Kogel's \ul Vision-8\ulnone  source code. \par
{\pntext\f3\'B7\tab}Paul Hayter's \ul DREAM MON\ulnone  documentation. \par
{\pntext\f3\'B7\tab}Paul Robson's web page. \par
{\pntext\f3\'B7\tab}Andreas Gustafsson's \ul Chip-48\ulnone  documentation. \par
\pard\sb100\sa100\fs20\line\line\line\f1 August 30, 1997 06:00:00\f0  \par
\pard\f2\par
}
 